{
  // see https://www.typescriptlang.org/tsconfig to better understand tsconfigs
  "include": ["./src"],
  "exclude": ["node_modules", "dist"],
  "compilerOptions": {
    "baseUrl": ".",
    // "module": "esnext",
    "lib": ["dom", "dom.iterable", "esnext"],
    // "importHelpers": true,
    // output .d.ts declaration files for consumers
    "declaration": true,
    // output .js.map sourcemap files for consumers
    // "sourceMap": true,
    // match output dir to input dir. e.g. dist/index instead of dist/src/index
    "rootDir": "./src",
    "outDir": "./dist",
    "target": "es5",
    // stricter type-checking for stronger correctness. Recommended by TS
    "strict": false,
    // linter checks for common issues
    // "noImplicitReturns": true,
    // "noFallthroughCasesInSwitch": true,
    // noUnused* overlap with @typescript-eslint/no-unused-vars, can disable if duplicative
    // "noUnusedLocals": true,
    // "noUnusedParameters": true,
    // use Node's module resolution algorithm, instead of the legacy TS one
    "moduleResolution": "node",
    // transpile JSX to `h`

    // "jsx": "react",
    // "jsxFactory": "h",
    "jsx": "react",
    // "jsx": "preserve",

    // interop between ESM and CJS modules. Recommended by TS
    "esModuleInterop": true,
    // significant perf increase by skipping checking .d.ts files, particularly those in node_modules. Recommended by TS
    "skipLibCheck": true,
    // error out if import and file system have a casing mismatch. Recommended by TS
    "forceConsistentCasingInFileNames": true,
    // `tsdx build` ignores this option, but it is commonly used when type-checking separately with `tsc`
    "noEmit": false
  }
}
